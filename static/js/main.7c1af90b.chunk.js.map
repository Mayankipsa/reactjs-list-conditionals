{"version":3,"sources":["Validation/Validation.js","Char/Char.js","App.js","reportWebVitals.js","index.js"],"names":["validation","props","validationMessage","inputLength","char","style","display","padding","margin","border","textAlign","onClick","clicked","character","App","state","userInput","inputChangedHandler","event","setState","target","value","deleteCharHandler","index","text","split","splice","updatedText","join","charList","this","map","ch","Char","className","type","onChange","Validation","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAaeA,EAZI,SAACC,GAChB,IAAIC,EAAoB,oBAIxB,OAHID,EAAME,aAAe,IACrBD,EAAoB,mBAGpB,8BACI,4BAAIA,OCSDE,EAhBF,SAACH,GAQV,OACI,qBAAKI,MARK,CACVC,QAAS,eACTC,QAAS,OACTC,OAAQ,OACRC,OAAQ,kBACRC,UAAW,UAGQC,QAASV,EAAMW,QAAlC,SACKX,EAAMY,aC6CJC,E,4MAjDbC,MAAQ,CACNC,UAAW,I,EAGbC,oBAAsB,SAACC,GACrB,EAAKC,SACH,CACEH,UAAWE,EAAME,OAAOC,S,EAK9BC,kBAAoB,SAACC,GACnB,IAAMC,EAAO,EAAKT,MAAMC,UAAUS,MAAM,IACxCD,EAAKE,OAAOH,EAAO,GACnB,IAAMI,EAAcH,EAAKI,KAAK,IAC9B,EAAKT,SACH,CACEH,UAAWW,K,4CAKjB,WAAU,IAAD,OACDE,EAAWC,KAAKf,MAAMC,UAAUS,MAAM,IAAIM,KAAI,SAACC,EAAIT,GACvD,OAAO,cAACU,EAAD,CACLpB,UAAWmB,EAEXpB,QAAS,kBAAM,EAAKU,kBAAkBC,KADjCA,MAKT,OACE,sBAAKW,UAAU,MAAf,UACE,6CACA,yEACA,uBACEC,KAAK,OACLC,SAAUN,KAAKb,oBACfI,MAAOS,KAAKf,MAAMC,YACpB,4BAAIc,KAAKf,MAAMC,YACf,cAACqB,EAAD,CAAYlC,YAAa2B,KAAKf,MAAMC,UAAUsB,SAC7CT,S,GA3CSU,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7c1af90b.chunk.js","sourcesContent":["import React from \"react\";\r\nconst validation = (props) => {\r\n    let validationMessage = \"Text long enough!\";\r\n    if (props.inputLength <= 5) {\r\n        validationMessage = \"Text too short!\"\r\n    }\r\n    return (\r\n        <div>\r\n            <p>{validationMessage}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default validation;","import React from \"react\";\r\nconst char = (props) => {\r\n    const style = {\r\n        display: 'inline-block',\r\n        padding: '16px',\r\n        margin: '16px',\r\n        border: '1px solid black',\r\n        textAlign: 'center'\r\n    };\r\n    return (\r\n        <div style={style} onClick={props.clicked}>\r\n            {props.character}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default char;","import './App.css';\nimport React, { Component } from 'react';\nimport Validation from \"./Validation/Validation\";\nimport Char from \"./Char/Char\";\nimport char from './Char/Char';\n\nclass App extends Component {\n  state = {\n    userInput: ''\n  }\n\n  inputChangedHandler = (event) => {\n    this.setState(\n      {\n        userInput: event.target.value\n      }\n    );\n  }\n\n  deleteCharHandler = (index) => {\n    const text = this.state.userInput.split('');\n    text.splice(index, 1);\n    const updatedText = text.join('');\n    this.setState(\n      {\n        userInput: updatedText\n      }\n    );\n  }\n\n  render() {\n    const charList = this.state.userInput.split('').map((ch, index) => {\n      return <Char\n        character={ch}\n        key={index}\n        clicked={() => this.deleteCharHandler(index)}\n      ></Char>\n    });\n\n    return (\n      <div className=\"App\">\n        <h1>Enter Text </h1>\n        <h3>Click on char below to delete from text</h3>\n        <input\n          type=\"text\"\n          onChange={this.inputChangedHandler}\n          value={this.state.userInput}></input>\n        <p>{this.state.userInput}</p>\n        <Validation inputLength={this.state.userInput.length}></Validation>\n        {charList}\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}